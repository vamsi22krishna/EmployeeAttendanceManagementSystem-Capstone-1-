package com.attendencemanagementsystem.repository;
import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase.Replace;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

import com.attendencemanagementsystem.entity.UserInfo;
import com.attendencemanagementsystem.entity.UserLogin;
import com.attendencemanagementsystem.entity.UserRole;

@DataJpaTest
@AutoConfigureTestDatabase(replace = Replace.NONE)
public class UserInfoRepositoryTest {

    @Autowired
    private UserInfoRepository userInfoRepository;

    @Autowired
    private UserLoginRepository userLoginRepository;

    @Autowired
    private UserRoleRepository userRoleRepository;

    private UserInfo userInfo;
    private UserLogin userLogin;
    private UserRole userRole;

    @BeforeEach
    public void setUp() {
        userInfo = new UserInfo();
        userInfo.setUserId("UI123");
        userInfo.setFirstName("John");
        userInfo.setLastName("Doe");
        userInfo.setAddress("123 Main St");
        userInfo.setSalary(50000.0f);
        userInfo.setDOB(new java.sql.Date(System.currentTimeMillis()));
        userInfoRepository.save(userInfo);

        userLogin = new UserLogin();
        userLogin.setLoginId("UL123");
        userLogin.setUserEmail("john.doe@example.com");
        userLogin.setPassword("password123");
        userLogin.setUserInfo(userInfo);
        userLoginRepository.save(userLogin);

        userRole = new UserRole();
        userRole.setUserRoleId("UR123");
        userRole.setUserLogin(userLogin);
        userRole.setRole("Manager");
        userRoleRepository.save(userRole);
    }

    @Test
    public void testFindByUserEmail() {
        UserInfo foundUser = userInfoRepository.findByUserEmail("john.doe@example.com");
        assertThat(foundUser).isNotNull();
        assertThat(foundUser.getFirstName()).isEqualTo("John");
        assertThat(foundUser.getLastName()).isEqualTo("Doe");
    }

    @Test
    public void testFindAllManagers() {
        List<UserInfo> managers = userInfoRepository.findAllManagers();
        assertThat(managers).isNotEmpty();
        assertThat(managers.get(0).getFirstName()).isEqualTo("John");
        assertThat(managers.get(0).getLastName()).isEqualTo("Doe");
    }

    @Test
    public void testFindByUserId() {
        UserInfo foundUser = userInfoRepository.findByUserId("UI1000");
        assertThat(foundUser).isNotNull();
        assertThat(foundUser.getFirstName()).isEqualTo("John");
        assertThat(foundUser.getLastName()).isEqualTo("Doe");
    }
}
