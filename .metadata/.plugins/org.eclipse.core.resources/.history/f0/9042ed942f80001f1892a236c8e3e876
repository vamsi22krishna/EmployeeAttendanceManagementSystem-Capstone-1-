package com.attendencemanagementsystem.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.attendencemanagementsystem.dto.AttendanceCorrectionDto;
import com.attendencemanagementsystem.entity.UserLogin;
import com.attendencemanagementsystem.service.AttendanceCorrectionService;
@CrossOrigin("*")
@RestController
@RequestMapping("/api/attendancecorrections")
public class AttendanceCorrectionController {

    @Autowired
    private AttendanceCorrectionService attendanceCorrectionService;

    @PostMapping
    public ResponseEntity<AttendanceCorrectionDto> createAttendanceCorrection(@RequestBody AttendanceCorrectionDto attendanceCorrectionDto) {
        return ResponseEntity.ok(attendanceCorrectionService.createAttendanceCorrection(attendanceCorrectionDto));
    }

    @GetMapping("/{correctionId}")
    public ResponseEntity<AttendanceCorrectionDto> getAttendanceCorrectionById(@PathVariable String correctionId) {
        return ResponseEntity.ok(attendanceCorrectionService.getAttendanceCorrectionById(correctionId));
    }

    @PutMapping("/{correctionId}")
    public ResponseEntity<AttendanceCorrectionDto> updateAttendanceCorrection(@PathVariable String correctionId, @RequestBody AttendanceCorrectionDto attendanceCorrectionDto) {
        return ResponseEntity.ok(attendanceCorrectionService.updateAttendanceCorrection(correctionId, attendanceCorrectionDto));
    }

    @DeleteMapping("/{correctionId}")
    public ResponseEntity<Void> deleteAttendanceCorrection(@PathVariable String correctionId) {
        attendanceCorrectionService.deleteAttendanceCorrection(correctionId);
        return ResponseEntity.noContent().build();
    }
    
    @GetMapping("/user/{loginId}")
    public List<AttendanceCorrectionDto> getCorrectionsByUser(@PathVariable String loginId) {
        UserLogin userLogin = new UserLogin();
        userLogin.setLoginId(loginId);
        return attendanceCorrectionService.getCorrectionsByUser(userLogin);
    }
    
    @PostMapping("/save")
    public AttendanceCorrectionDto saveCorrection(@RequestBody AttendanceCorrectionDto correctionDTO) {
        return attendanceCorrectionService.saveCorrection(correctionDTO);
    }
    
    @PutMapping("/updatestatus/{correctionId}")
    public AttendanceCorrectionDto updateCorrectionStatus(@PathVariable String correctionId, @RequestParam String status) {
        return attendanceCorrectionService.updateCorrectionStatus(correctionId, status);
    }
    
    @GetMapping("/manager/{managerId}")
    public List<AttendanceCorrectionDto> getCorrectionsForManager(@PathVariable String managerId) {
        return attendanceCorrectionService.getCorrectionsForManager(managerId);
    }

}
